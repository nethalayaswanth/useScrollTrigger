{"version":3,"file":"index.umd.js","sources":["../src/utils.ts","../src/trigger.ts","../src/hooks/useStable.ts","../src/hooks/useIsomorphicLayoutEffect.ts","../src/hooks/useResolvedElement.ts","../src/index.tsx","../src/hooks/useResizeObserver.ts"],"sourcesContent":["import { MutableRefObject, LegacyRef } from \"react\";\r\n\r\nexport const clamp = (value: number, min: number, max: number) =>\r\n  Math.max(min, Math.min(value, max));\r\n\r\nexport type Ref<T> = MutableRefObject<T> | LegacyRef<T> | undefined;\r\nexport function mergeRefs<T = any>(...refs: Ref<T>[]): React.RefCallback<T> {\r\n  return (value) => {\r\n    refs.forEach((ref) => {\r\n      if (typeof ref === \"function\") {\r\n        ref(value);\r\n      } else if (ref != null) {\r\n        (ref as React.MutableRefObject<T | null>).current = value;\r\n      }\r\n    });\r\n  };\r\n}\r\n\r\nexport function extractSize(\r\n  entry: ResizeObserverEntry,\r\n  boxProp: \"borderBoxSize\" | \"contentBoxSize\" | \"devicePixelContentBoxSize\",\r\n  sizeType: keyof ResizeObserverSize\r\n): number | undefined {\r\n  if (!entry[boxProp]) {\r\n    if (boxProp === \"contentBoxSize\") {\r\n      return entry.contentRect[sizeType === \"inlineSize\" ? \"width\" : \"height\"];\r\n    }\r\n\r\n    return undefined;\r\n  }\r\n\r\n  return entry[boxProp][0]\r\n    ? entry[boxProp][0][sizeType]\r\n    : // @ts-ignore\r\n      entry[boxProp][sizeType];\r\n}\r\n","import { clamp } from \"./utils\";\r\n\r\nconst ROOTMARGINEXT = 20;\r\n\r\nexport interface IntersectionOptions extends IntersectionObserverInit {}\r\n\r\nexport interface EventCallbackProps {\r\n  node: HTMLElement;\r\n  entry: IntersectionObserverEntry;\r\n  scrollingUp: boolean;\r\n  progress: number;\r\n}\r\n\r\ntype Observer = IntersectionObserver | null;\r\n\r\n\r\nexport default class ScrollTrigger {\r\n  private nodes = new Map<HTMLElement, any>();\r\n  private visibleNodes = new Map<HTMLElement, IntersectionObserverEntry>();\r\n  private animatingNodes = new Set<HTMLElement>();\r\n  private observer: IntersectionObserver | null = null;\r\n  private scroller: Element | Document | null | undefined = null;\r\n  private direction: string | null = null;\r\n  private mounted = false;\r\n  private prevYPosition = 0;\r\n  private scroll = true;\r\n\r\n  private static readonly ROOTMARGINEXT = 0; // Replace this with the actual value\r\n\r\n  private setScrollDirection(scrollTop: number) {\r\n    if (scrollTop < this.prevYPosition) {\r\n      this.direction = \"down\";\r\n    } else {\r\n      this.direction = \"up\";\r\n    }\r\n    this.prevYPosition = scrollTop;\r\n  }\r\n\r\n  private handleIntersecting(entry: IntersectionObserverEntry) {\r\n    let target = entry.target as HTMLElement;\r\n    if (entry.isIntersecting) {\r\n      this.visibleNodes.set(target, entry);\r\n      target.classList.add(\"trigger\");\r\n    } else {\r\n      if (!this.direction) return;\r\n\r\n      const scrollingUp = this.direction === \"up\";\r\n\r\n      target.classList.remove(\"trigger\");\r\n      target.style.setProperty(\"--trigger\", scrollingUp ? \" 1\" : \" 0\");\r\n      target.style.setProperty(\r\n        \"--trigger-px\",\r\n        scrollingUp ? target.dataset.end ?? \"0\" : \"0\"\r\n      );\r\n    }\r\n  }\r\n\r\n  private updateEntries(entries: IntersectionObserverEntry[]) {\r\n    this.visibleNodes = new Map();\r\n    entries.forEach((entry) => {\r\n      this.handleIntersecting(entry);\r\n    });\r\n  }\r\n\r\n  private caluclatePosition(entry: IntersectionObserverEntry) {\r\n     if (!entry) return [0, 0];\r\n\r\n      var { top: elTop, height: elHeight } = entry.boundingClientRect;\r\n      if (!entry.rootBounds) return [0, 0];\r\n      var { height: rootHeight } = entry.rootBounds;\r\n      var rootVisibleHeight = rootHeight - 2 * ROOTMARGINEXT;\r\n      var start = 0;\r\n      var end = rootVisibleHeight + elHeight;\r\n\r\n      let target = entry.target as HTMLElement;\r\n      if (target.dataset.start) {\r\n        start = parseInt(target.dataset.start, 10);\r\n      }\r\n      if (target.dataset.end) {\r\n        end = parseInt(target.dataset.end, 10);\r\n      }\r\n      var track = end - start;\r\n      var posTop = rootVisibleHeight - elTop - start;\r\n      var pos = posTop / track;\r\n\r\n      return [clamp(pos, 0, 1), clamp(posTop, 0, track)];\r\n  }\r\n\r\n  private update() {\r\n    this.visibleNodes.forEach((entry, node) => {\r\n      var style = node.style;\r\n      var id = node.id;\r\n\r\n      const [progress, pixels] = this.caluclatePosition(entry);\r\n      const scrollingUp = this.direction === \"up\";\r\n      const { onStart, onProgress, onEnd } = this.nodes.get(node);\r\n\r\n      if (progress > 0 && progress < 1) {\r\n        if (!this.animatingNodes.has(node)) {\r\n          this.animatingNodes.add(node);\r\n\r\n          if (scrollingUp) {\r\n            onStart({ node, entry, scrollingUp, progress });\r\n          }\r\n        }\r\n\r\n        onProgress({ node, entry, scrollingUp, progress });\r\n      } else if (progress === 0 || progress === 1) {\r\n        if (this.animatingNodes.has(node)) {\r\n          if (progress === 1) {\r\n            onEnd({ node, entry, scrollingUp, progress });\r\n          }\r\n          this.animatingNodes.delete(node);\r\n        }\r\n      }\r\n\r\n      style.setProperty(\"--trigger\", `${progress}`);\r\n      style.setProperty(\"--trigger-px\", `${pixels}`);\r\n    });\r\n  }\r\n\r\n  public initObserver({ root, ...observerOptions }: IntersectionOptions) {\r\n    this.scroller = root;\r\n    this.observer = new IntersectionObserver(\r\n      (entries, observer) => {\r\n        this.updateEntries(entries);\r\n        this.update();\r\n      },\r\n      { root, rootMargin: `${ScrollTrigger.ROOTMARGINEXT}px 0px`, ...observerOptions }\r\n    );\r\n  }\r\n\r\n  public init(observerOptions: IntersectionOptions) {\r\n    this.initObserver(observerOptions);\r\n    this.observeAll();\r\n    this.onScroll();\r\n\r\n    return this;\r\n  }\r\n\r\n  public add({ node, ...props }: { node: HTMLElement }) {\r\n    this.nodes.set(node, props);\r\n    node.style.setProperty(\"--trigger\", \"0\");\r\n    node.style.setProperty(\"--trigger-px\", \"0\");\r\n    this.observe(node);\r\n  }\r\n\r\n  public observe(element: HTMLElement) {\r\n    if (this.observer) this.observer.observe(element);\r\n  }\r\n\r\n  public unobserve(element: HTMLElement) {\r\n    if (this.observer) this.observer.unobserve(element);\r\n  }\r\n\r\n  public destroy() {\r\n    if (this.observer) this.observer.disconnect();\r\n  }\r\n\r\n  public observeAll() {\r\n    this.nodes.forEach((value, node) => {\r\n      this.observe(node);\r\n    });\r\n  }\r\n\r\n  public onScroll(e?: Event) {\r\n    if (e && this.mounted) {\r\n      if (!(e.target instanceof HTMLElement || e.target instanceof Window))\r\n        return;\r\n\r\n      const scrollTop =\r\n        e.target instanceof HTMLElement\r\n          ? e.target.scrollTop\r\n          : e.target instanceof Document\r\n          ? e.target.documentElement.scrollTop\r\n          : e.target instanceof Window\r\n          ? e.target.scrollX\r\n          : 0;\r\n      this.mounted = true;\r\n\r\n      this.setScrollDirection(scrollTop);\r\n    }\r\n\r\n    if (this.visibleNodes && this.visibleNodes.size !== 0) {\r\n      this.visibleNodes.forEach((value, element) => {\r\n        this.unobserve(element);\r\n        this.observe(element);\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\n","import * as React from \"react\";\r\n\r\nconst useLatest = <T extends any>(current: T) => {\r\n  const storedValue = React.useRef(current);\r\n  React.useEffect(() => {\r\n    storedValue.current = current;\r\n  });\r\n  return storedValue;\r\n};\r\n\r\nexport default useLatest;\r\n","import { useEffect, useLayoutEffect } from \"react\";\r\n\r\nconst useIsomorphicLayoutEffect =\r\n  typeof window !== \"undefined\" ? useLayoutEffect : useEffect;\r\n\r\nexport default useIsomorphicLayoutEffect;\r\n","import { RefCallback, RefObject, useCallback, useEffect, useRef } from \"react\";\r\nimport useIsomorphicLayoutEffect from \"./useIsomorphicLayoutEffect\";\r\n\r\ntype SubscriberCleanupFunction = () => void;\r\ntype SubscriberResponse = SubscriberCleanupFunction | void;\r\n\r\nexport default function useResolvedElement<T extends Element>(\r\n  subscriber: (element: T) => SubscriberResponse,\r\n  refOrElement?: T | RefObject<T> | null\r\n): RefCallback<T> {\r\n  const lastReportRef = useRef<{\r\n    element: T | null;\r\n    subscriber: typeof subscriber;\r\n    cleanup?: SubscriberResponse;\r\n  } | null>(null);\r\n  const refOrElementRef = useRef<typeof refOrElement>(null);\r\n  refOrElementRef.current = refOrElement;\r\n  const cbElementRef = useRef<T | null>(null);\r\n\r\n  const evaluateSubscription = useCallback(() => {\r\n    const cbElement = cbElementRef.current;\r\n    const refOrElement = refOrElementRef.current;\r\n\r\n    const element = cbElement\r\n      ? cbElement\r\n      : refOrElement\r\n      ? refOrElement instanceof Element\r\n        ? refOrElement\r\n        : refOrElement.current\r\n      : null;\r\n\r\n    if (\r\n      lastReportRef.current &&\r\n      lastReportRef.current.element === element &&\r\n      lastReportRef.current.subscriber === subscriber\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    if (lastReportRef.current && lastReportRef.current.cleanup) {\r\n      lastReportRef.current.cleanup();\r\n    }\r\n    lastReportRef.current = {\r\n      element,\r\n      subscriber,\r\n\r\n      cleanup: element ? subscriber(element) : undefined\r\n    };\r\n  }, [subscriber]);\r\n\r\n  useIsomorphicLayoutEffect(() => {\r\n    evaluateSubscription();\r\n  });\r\n\r\n  useIsomorphicLayoutEffect(() => {\r\n    return () => {\r\n      if (lastReportRef.current && lastReportRef.current.cleanup) {\r\n        lastReportRef.current.cleanup();\r\n        lastReportRef.current = null;\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  return useCallback(\r\n    (element) => {\r\n      cbElementRef.current = element;\r\n      evaluateSubscription();\r\n    },\r\n    [evaluateSubscription]\r\n  );\r\n}\r\n/*  The MIT License (MIT)\r\n Copyright 2018 Viktor Hubert <rpgmorpheus@gmail.com> */\r\n","import {\n  useCallback,\n  useLayoutEffect,\n  useState,\n  RefObject,\n  useMemo\n} from \"react\";\nimport { mergeRefs } from \"./utils\";\nimport ScrollTrigger, { EventCallbackProps } from \"./trigger\";\nimport useStable from \"./hooks/useStable\";\nimport useResolvedElement from \"./hooks/useResolvedElement\";\nimport useResizeObserver, { ResizeHandler } from \"./hooks/useResizeObserver\";\n\ntype Register = {\n  name: string;\n  start?: string;\n  end?: string;\n  ref?: RefObject<HTMLElement>;\n  refKey?: string;\n  style?: CSSStyleSheet;\n  onProgress?: (arg: EventCallbackProps) => void;\n  onEntering?: (arg: EventCallbackProps) => void;\n  onEntered?: (arg: EventCallbackProps) => void;\n  onLeaving?: (arg: EventCallbackProps) => void;\n  onLeft?: (arg: EventCallbackProps) => void;\n  onEnteredBack?: (arg: EventCallbackProps) => void;\n  onLeaveBack?: (arg: EventCallbackProps) => void;\n  onStart?: (arg: EventCallbackProps) => void;\n  onEnd?: (arg: EventCallbackProps) => void;\n};\n\nexport const useScrollTrigger = <T extends HTMLElement>({\n  root,\n  onScroll\n}: {\n  root?: T | RefObject<T> | null;\n  onScroll?: (e: Event) => void;\n}) => {\n  const getScroller = useCallback(() => {\n    const scroller = !root\n      ? document.documentElement\n      : typeof root === \"string\"\n      ? document.getElementById(root)\n      : root instanceof HTMLElement\n      ? root\n      : root.current;\n    return scroller;\n  }, [root]);\n\n  const [trigger] = useState(() => new ScrollTrigger());\n\n  const onScrollRef = useStable(onScroll);\n\n  useLayoutEffect(() => {\n    trigger.init({ root: getScroller() });\n  }, [getScroller, trigger]);\n\n  const containerRef = useResolvedElement<HTMLElement>((element) => {\n    const handleScroll = (e: Event) => {\n      trigger.onScroll(e);\n      onScrollRef.current?.(e);\n    };\n\n    element.addEventListener(\"scroll\", handleScroll, { passive: true });\n    return () => {\n      trigger.destroy();\n      element.removeEventListener(\"scroll\", handleScroll, ({\n        passive: true\n      } as unknown) as EventListenerOptions);\n    };\n  }, getScroller());\n\n  const { ref: resizeRef } = useResizeObserver({\n    ref: getScroller(),\n    onResize: useCallback(() => {\n      trigger.observeAll();\n    }, [trigger]) as ResizeHandler\n  });\n\n  const registerCb = (props: Register & { node: HTMLElement }) => {\n    const { node, start, end } = props;\n    node.dataset.start = start;\n    node.dataset.end = end;\n    trigger.add(props);\n  };\n\n  function register({ name, ref, style, ...rest }: Register) {\n    return {\n      id: `${name}`,\n      ref: mergeRefs((node) => {\n        if (!node) return;\n        registerCb({\n          node,\n          name,\n          ...rest\n        });\n      }, ref),\n      style: {\n        ...style\n      }\n    };\n  }\n\n  const scrollerRef = useMemo(() => mergeRefs(containerRef, resizeRef), [\n    containerRef,\n    resizeRef\n  ]);\n  return { register, scrollerRef };\n};\n\nexport default useScrollTrigger;\n","import {\r\n  useEffect,\r\n  useState,\r\n  useRef,\r\n  useMemo,\r\n  RefObject,\r\n  RefCallback,\r\n  useCallback\r\n} from \"react\";\r\n\r\nimport useResolvedElement from \"./useResolvedElement\";\r\nimport { extractSize } from \"../utils\";\r\n\r\nexport type ObservedSize = {\r\n  width: number | undefined;\r\n  height: number | undefined;\r\n};\r\n\r\nexport type ResizeHandler = (size: ObservedSize) => void;\r\n\r\ntype HookResponse<T extends Element> = {\r\n  ref: RefCallback<T>;\r\n} & ObservedSize;\r\n\r\nexport type ResizeObserverBoxOptions =\r\n  | \"border-box\"\r\n  | \"content-box\"\r\n  | \"device-pixel-content-box\";\r\n\r\ndeclare global {\r\n  interface ResizeObserverEntry {\r\n    readonly devicePixelContentBoxSize: ReadonlyArray<ResizeObserverSize>;\r\n  }\r\n}\r\n\r\nexport type RoundingFunction = (n: number) => number;\r\n\r\nfunction useResizeObserver<T extends Element>(\r\n  opts: {\r\n    ref?: RefObject<T> | T | null | undefined;\r\n    onResize?: ResizeHandler;\r\n    box?: ResizeObserverBoxOptions;\r\n    round?: RoundingFunction;\r\n  } = {}\r\n): HookResponse<T> {\r\n  const onResize = opts.onResize;\r\n  const onResizeRef = useRef<ResizeHandler | undefined>(undefined);\r\n  onResizeRef.current = onResize;\r\n  const round = opts.round || Math.round;\r\n\r\n  const resizeObserverRef = useRef<{\r\n    box?: ResizeObserverBoxOptions;\r\n    round?: RoundingFunction;\r\n    instance: ResizeObserver;\r\n  }>();\r\n\r\n  const [size, setSize] = useState<{\r\n    width?: number;\r\n    height?: number;\r\n  }>({\r\n    width: undefined,\r\n    height: undefined\r\n  });\r\n\r\n  const didUnmount = useRef(false);\r\n  useEffect(() => {\r\n    didUnmount.current = false;\r\n\r\n    return () => {\r\n      didUnmount.current = true;\r\n    };\r\n  }, []);\r\n\r\n  const previous: {\r\n    current: {\r\n      width?: number;\r\n      height?: number;\r\n    };\r\n  } = useRef({\r\n    width: undefined,\r\n    height: undefined\r\n  });\r\n\r\n  const refCallback = useResolvedElement<T>(\r\n    useCallback(\r\n      (element) => {\r\n        if (\r\n          !resizeObserverRef.current ||\r\n          resizeObserverRef.current.box !== opts.box ||\r\n          resizeObserverRef.current.round !== round\r\n        ) {\r\n          resizeObserverRef.current = {\r\n            box: opts.box,\r\n            round,\r\n            instance: new ResizeObserver((entries) => {\r\n              const entry = entries[0];\r\n\r\n              const boxProp =\r\n                opts.box === \"border-box\"\r\n                  ? \"borderBoxSize\"\r\n                  : opts.box === \"device-pixel-content-box\"\r\n                  ? \"devicePixelContentBoxSize\"\r\n                  : \"contentBoxSize\";\r\n\r\n              const reportedWidth = extractSize(entry, boxProp, \"inlineSize\");\r\n              const reportedHeight = extractSize(entry, boxProp, \"blockSize\");\r\n\r\n              const newWidth = reportedWidth ? round(reportedWidth) : undefined;\r\n              const newHeight = reportedHeight\r\n                ? round(reportedHeight)\r\n                : undefined;\r\n\r\n              if (\r\n                previous.current.width !== newWidth ||\r\n                previous.current.height !== newHeight\r\n              ) {\r\n                const newSize = { width: newWidth, height: newHeight };\r\n                previous.current.width = newWidth;\r\n                previous.current.height = newHeight;\r\n                if (onResizeRef.current) {\r\n                  onResizeRef.current(newSize);\r\n                } else {\r\n                  if (!didUnmount.current) {\r\n                    setSize(newSize);\r\n                  }\r\n                }\r\n              }\r\n            })\r\n          };\r\n        }\r\n\r\n        resizeObserverRef.current.instance.observe(element, { box: opts.box });\r\n\r\n        return () => {\r\n          if (resizeObserverRef.current) {\r\n            resizeObserverRef.current.instance.unobserve(element);\r\n          }\r\n        };\r\n      },\r\n      [opts.box, round]\r\n    ),\r\n    opts.ref\r\n  );\r\n\r\n  return useMemo(\r\n    () => ({\r\n      ref: refCallback,\r\n      width: size.width,\r\n      height: size.height\r\n    }),\r\n    [refCallback, size.width, size.height]\r\n  );\r\n}\r\n\r\nexport default useResizeObserver;\r\n\r\n/*  The MIT License (MIT)\r\n Copyright 2018 Viktor Hubert <rpgmorpheus@gmail.com> */\r\n"],"names":["clamp","value","min","max","Math","mergeRefs","_arguments","arguments","slice","call","forEach","ref","current","extractSize","entry","boxProp","sizeType","contentRect","_excluded","_excluded2","ScrollTrigger","nodes","Map","visibleNodes","this","animatingNodes","Set","observer","scroller","direction","mounted","prevYPosition","scroll","_proto","prototype","setScrollDirection","scrollTop","handleIntersecting","target","isIntersecting","set","classList","add","_target$dataset$end","scrollingUp","remove","style","setProperty","dataset","end","updateEntries","entries","_this","caluclatePosition","_entry$boundingClient","boundingClientRect","elTop","top","rootBounds","rootVisibleHeight","height","start","parseInt","track","posTop","update","_this2","node","_this2$caluclatePosit","progress","pixels","_this2$nodes$get","get","onStart","onProgress","onEnd","has","delete","initObserver","_ref","_this3","root","observerOptions","_objectWithoutPropertiesLoose","IntersectionObserver","_extends","rootMargin","ROOTMARGINEXT","init","observeAll","onScroll","_ref2","props","observe","element","unobserve","destroy","disconnect","_this4","e","_this5","HTMLElement","Window","Document","documentElement","scrollX","size","useIsomorphicLayoutEffect","window","useLayoutEffect","useEffect","useResolvedElement","subscriber","refOrElement","lastReportRef","useRef","refOrElementRef","cbElementRef","evaluateSubscription","useCallback","Element","cleanup","undefined","useScrollTrigger","storedValue","getScroller","document","getElementById","trigger","useState","onScrollRef","React","containerRef","handleScroll","addEventListener","passive","removeEventListener","resizeRef","opts","onResize","onResizeRef","round","resizeObserverRef","_useState","width","setSize","didUnmount","previous","refCallback","box","instance","ResizeObserver","reportedWidth","reportedHeight","newWidth","newHeight","newSize","useMemo","useResizeObserver","register","name","rest","id","registerCb","scrollerRef"],"mappings":"+5BAEaA,EAAQ,SAACC,EAAeC,EAAaC,GAChD,OAAAC,KAAKD,IAAID,EAAKE,KAAKF,IAAID,EAAOE,GAAK,EAGrB,SAAAE,IAAoCC,IAAAA,EAAAC,UAClD,OAAO,SAACN,GACN,GAAAO,MAAAC,KAAAH,GAAKI,QAAQ,SAACC,GACO,mBAARA,EACTA,EAAIV,GACY,MAAPU,IACRA,EAAyCC,QAAUX,EAExD,EACF,CACF,CAEgB,SAAAY,EACdC,EACAC,EACAC,GAEA,OAAKF,EAAMC,GAQJD,EAAMC,GAAS,GAClBD,EAAMC,GAAS,GAAGC,GAElBF,EAAMC,GAASC,GAVD,mBAAZD,EACKD,EAAMG,YAAyB,eAAbD,EAA4B,QAAU,eAGjE,CAOJ,CCnCA,IAAAE,EAAA,CAAA,QAAAC,EAAA,CAAA,QAgBqBC,eAAaA,WAAAA,SAAAA,IACxBC,KAAAA,MAAQ,IAAIC,SACZC,aAAe,IAAID,IAA6CE,KAChEC,eAAiB,IAAIC,IACrBC,KAAAA,SAAwC,KACxCC,KAAAA,SAAkD,KAClDC,KAAAA,UAA2B,KAC3BC,KAAAA,SAAU,EAAKN,KACfO,cAAgB,EAACP,KACjBQ,QAAS,CAAI,CAAAC,IAAAA,EAAAb,EAAAc,UAoKpB,OApKoBD,EAIbE,mBAAA,SAAmBC,GAEvBZ,KAAKK,UADHO,EAAYZ,KAAKO,cACF,OAEA,KAEnBP,KAAKO,cAAgBK,CACvB,EAACH,EAEOI,mBAAA,SAAmBvB,GACzB,IAAIwB,EAASxB,EAAMwB,OACnB,GAAIxB,EAAMyB,eACRf,KAAKD,aAAaiB,IAAIF,EAAQxB,GAC9BwB,EAAOG,UAAUC,IAAI,eAChB,CAAAC,IAAAA,EACL,IAAKnB,KAAKK,UAAW,OAErB,IAAMe,EAAiC,OAAnBpB,KAAKK,UAEzBS,EAAOG,UAAUI,OAAO,WACxBP,EAAOQ,MAAMC,YAAY,YAAaH,EAAc,KAAO,MAC3DN,EAAOQ,MAAMC,YACX,eACAH,GAAgC,OAArBD,EAAGL,EAAOU,QAAQC,KAAGN,EAAU,IAE7C,CACH,EAACV,EAEOiB,cAAA,SAAcC,GAAoCC,IAAAA,EACxD5B,KAAAA,KAAKD,aAAe,IAAID,IACxB6B,EAAQzC,QAAQ,SAACI,GACfsC,EAAKf,mBAAmBvB,EAC1B,EACF,EAACmB,EAEOoB,kBAAA,SAAkBvC,GACvB,IAAKA,EAAO,MAAO,CAAC,EAAG,GAEtB,IAAAwC,EAAuCxC,EAAMyC,mBAAlCC,EAAKF,EAAVG,IACN,IAAK3C,EAAM4C,WAAY,MAAO,CAAC,EAAG,GAClC,IACIC,EADyB7C,EAAM4C,WAA7BE,OAC+B,GACjCC,EAAQ,EACRZ,EAAMU,EALwBL,EAAhBM,OAOdtB,EAASxB,EAAMwB,OACfA,EAAOU,QAAQa,QACjBA,EAAQC,SAASxB,EAAOU,QAAQa,MAAO,KAErCvB,EAAOU,QAAQC,MACjBA,EAAMa,SAASxB,EAAOU,QAAQC,IAAK,KAErC,IAAIc,EAAQd,EAAMY,EACdG,EAASL,EAAoBH,EAAQK,EAGzC,MAAO,CAAC7D,EAFEgE,EAASD,EAEA,EAAG,GAAI/D,EAAMgE,EAAQ,EAAGD,GAC/C,EAAC9B,EAEOgC,OAAA,WAAMC,IAAAA,EACZ1C,KAAAA,KAAKD,aAAab,QAAQ,SAACI,EAAOqD,GAChC,IAAIrB,EAAQqB,EAAKrB,MAGjBsB,EAA2BF,EAAKb,kBAAkBvC,GAA3CuD,EAAQD,EAAEE,GAAAA,EAAMF,EACvB,GAAMxB,EAAiC,OAAnBsB,EAAKrC,UACzB0C,EAAuCL,EAAK7C,MAAMmD,IAAIL,GAA9CM,EAAOF,EAAPE,QAASC,EAAUH,EAAVG,WAAYC,EAAKJ,EAALI,MAEzBN,EAAW,GAAKA,EAAW,GACxBH,EAAKzC,eAAemD,IAAIT,KAC3BD,EAAKzC,eAAeiB,IAAIyB,GAEpBvB,GACF6B,EAAQ,CAAEN,KAAAA,EAAMrD,MAAAA,EAAO8B,YAAAA,EAAayB,SAAAA,KAIxCK,EAAW,CAAEP,KAAAA,EAAMrD,MAAAA,EAAO8B,YAAAA,EAAayB,SAAAA,KACjB,IAAbA,GAA+B,IAAbA,GACvBH,EAAKzC,eAAemD,IAAIT,KACT,IAAbE,GACFM,EAAM,CAAER,KAAAA,EAAMrD,MAAAA,EAAO8B,YAAAA,EAAayB,SAAAA,IAEpCH,EAAKzC,eAAeoD,OAAOV,IAI/BrB,EAAMC,YAAY,YAAW,GAAKsB,GAClCvB,EAAMC,YAAY,eAAc,GAAKuB,EACvC,EACF,EAACrC,EAEM6C,aAAA,SAAAC,GAA8DC,IAAAA,EAA/CxD,KAAAyD,EAAIF,EAAJE,KAASC,EAAeC,EAAAJ,EAAA7D,GAC5CM,KAAKI,SAAWqD,EAChBzD,KAAKG,SAAW,IAAIyD,qBAClB,SAACjC,EAASxB,GACRqD,EAAK9B,cAAcC,GACnB6B,EAAKf,QACP,EAACoB,EAAA,CACCJ,KAAAA,EAAMK,WAAelE,EAAcmE,cAAqB,UAAKL,GAEnE,EAACjD,EAEMuD,KAAA,SAAKN,GAKV,OAJA1D,KAAKsD,aAAaI,GAClB1D,KAAKiE,aACLjE,KAAKkE,WAEElE,IACT,EAACS,EAEMS,IAAA,SAAAiD,GAA6C,IAAvCxB,EAAIwB,EAAJxB,KAASyB,EAAKT,EAAAQ,EAAAxE,GACzBK,KAAKH,MAAMmB,IAAI2B,EAAMyB,GACrBzB,EAAKrB,MAAMC,YAAY,YAAa,KACpCoB,EAAKrB,MAAMC,YAAY,eAAgB,KACvCvB,KAAKqE,QAAQ1B,EACf,EAAClC,EAEM4D,QAAA,SAAQC,GACTtE,KAAKG,UAAUH,KAAKG,SAASkE,QAAQC,EAC3C,EAAC7D,EAEM8D,UAAA,SAAUD,GACXtE,KAAKG,UAAUH,KAAKG,SAASoE,UAAUD,EAC7C,EAAC7D,EAEM+D,QAAA,WACDxE,KAAKG,UAAUH,KAAKG,SAASsE,YACnC,EAAChE,EAEMwD,WAAA,WAAUS,IAAAA,EACf1E,KAAAA,KAAKH,MAAMX,QAAQ,SAACT,EAAOkE,GACzB+B,EAAKL,QAAQ1B,EACf,EACF,EAAClC,EAEMyD,SAAA,SAASS,GAAS,IAAAC,EACvB5E,KAAA,GAAI2E,GAAK3E,KAAKM,QAAS,CACrB,KAAMqE,EAAE7D,kBAAkB+D,aAAeF,EAAE7D,kBAAkBgE,QAC3D,OAEF,IAAMlE,EACJ+D,EAAE7D,kBAAkB+D,YAChBF,EAAE7D,OAAOF,UACT+D,EAAE7D,kBAAkBiE,SACpBJ,EAAE7D,OAAOkE,gBAAgBpE,UACzB+D,EAAE7D,kBAAkBgE,OACpBH,EAAE7D,OAAOmE,QACT,EACNjF,KAAKM,SAAU,EAEfN,KAAKW,mBAAmBC,EACzB,CAEGZ,KAAKD,cAA2C,IAA3BC,KAAKD,aAAamF,MACzClF,KAAKD,aAAab,QAAQ,SAACT,EAAO6F,GAChCM,EAAKL,UAAUD,GACfM,EAAKP,QAAQC,EACf,EAEJ,EAAC1E,CAAA,CA7K+BA,GAAbA,EAWKmE,cAAgB,ECzB1C,ICAMoB,EACc,oBAAXC,OAAyBC,EAAeA,gBAAGC,EAASA,UCGrC,SAAAC,EACtBC,EACAC,GAEA,IAAMC,EAAgBC,EAAMA,OAIlB,MACJC,EAAkBD,EAAAA,OAA4B,MACpDC,EAAgBxG,QAAUqG,EAC1B,IAAMI,EAAeF,EAAAA,OAAiB,MAEhCG,EAAuBC,cAAY,WACvC,IACMN,EAAeG,EAAgBxG,QAE/BkF,EAHYuB,EAAazG,UAK3BqG,EACAA,aAAwBO,QACtBP,EACAA,EAAarG,QACf,MAGFsG,EAActG,SACdsG,EAActG,QAAQkF,UAAYA,GAClCoB,EAActG,QAAQoG,aAAeA,IAKnCE,EAActG,SAAWsG,EAActG,QAAQ6G,SACjDP,EAActG,QAAQ6G,UAExBP,EAActG,QAAU,CACtBkF,QAAAA,EACAkB,WAAAA,EAEAS,QAAS3B,EAAUkB,EAAWlB,QAAW4B,GAE7C,EAAG,CAACV,IAeJ,OAbAL,EAA0B,WACxBW,GACF,GAEAX,EAA0B,WACxB,OAAY,WACNO,EAActG,SAAWsG,EAActG,QAAQ6G,UACjDP,EAActG,QAAQ6G,UACtBP,EAActG,QAAU,KAE5B,CACF,EAAG,IAEI2G,cACL,SAACzB,GACCuB,EAAazG,QAAUkF,EACvBwB,GACF,EACA,CAACA,GAEL,8BCvCaK,EAAmB,SAAH5C,GAC3B,IH9BgCnE,EAC1BgH,EG6BN3C,EAAIF,EAAJE,KACAS,EAAQX,EAARW,SAKMmC,EAAcN,EAAWA,YAAC,WAQ9B,OAPkBtC,EAEE,iBAATA,EACP6C,SAASC,eAAe9C,GACxBA,aAAgBoB,YAChBpB,EACAA,EAAKrE,QALLkH,SAAStB,eAOf,EAAG,CAACvB,IAEG+C,EAAWC,EAAAA,SAAS,WAAM,OAAA,IAAI7G,CAAe,GAEpD,GAAM8G,GHhDAN,EAAcO,EAAMhB,OADMvG,EGiDF8E,GH/C9ByC,EAAMrB,UAAU,WACdc,EAAYhH,QAAUA,CACxB,GACOgH,GG8CPf,kBAAgB,WACdmB,EAAQxC,KAAK,CAAEP,KAAM4C,KACvB,EAAG,CAACA,EAAaG,IAEjB,IAAMI,EAAerB,EAAgC,SAACjB,GACpD,IAAMuC,EAAe,SAAClC,GACpB6B,EAAQtC,SAASS,GACjB+B,MAAAA,EAAYtH,SAAZsH,EAAYtH,QAAUuF,EACxB,EAGA,OADAL,EAAQwC,iBAAiB,SAAUD,EAAc,CAAEE,SAAS,IACrD,WACLP,EAAQhC,UACRF,EAAQ0C,oBAAoB,SAAUH,EAAe,CACnDE,SAAS,GAEb,CACF,EAAGV,KAEUY,ECnCf,SACEC,QAAA,IAAAA,IAAAA,EAKI,CAAE,GAEN,IAAMC,EAAWD,EAAKC,SAChBC,EAAczB,EAAMA,YAA4BO,GACtDkB,EAAYhI,QAAU+H,EACtB,IAAME,EAAQH,EAAKG,OAASzI,KAAKyI,MAE3BC,EAAoB3B,EAAMA,SAMhC4B,EAAwBd,EAAAA,SAGrB,CACDe,WAAOtB,EACP9D,YAAQ8D,IALHhB,EAAIqC,EAAA,GAAEE,EAAOF,EAQpB,GAAMG,EAAa/B,EAAAA,QAAO,GAC1BL,EAAAA,UAAU,WAGR,OAFAoC,EAAWtI,SAAU,EAET,WACVsI,EAAWtI,SAAU,CACvB,CACF,EAAG,IAEH,IAAMuI,EAKFhC,EAAAA,OAAO,CACT6B,WAAOtB,EACP9D,YAAQ8D,IAGJ0B,EAAcrC,EAClBQ,EAAWA,YACT,SAACzB,GAgDC,OA9CGgD,EAAkBlI,SACnBkI,EAAkBlI,QAAQyI,MAAQX,EAAKW,KACvCP,EAAkBlI,QAAQiI,QAAUA,IAEpCC,EAAkBlI,QAAU,CAC1ByI,IAAKX,EAAKW,IACVR,MAAAA,EACAS,SAAU,IAAIC,eAAe,SAACpG,GAC5B,IAAMrC,EAAQqC,EAAQ,GAEhBpC,EACS,eAAb2H,EAAKW,IACD,gBACa,6BAAbX,EAAKW,IACL,4BACA,iBAEAG,EAAgB3I,EAAYC,EAAOC,EAAS,cAC5C0I,EAAiB5I,EAAYC,EAAOC,EAAS,aAE7C2I,EAAWF,EAAgBX,EAAMW,QAAiB9B,EAClDiC,EAAYF,EACdZ,EAAMY,QACN/B,EAEJ,GACEyB,EAASvI,QAAQoI,QAAUU,GAC3BP,EAASvI,QAAQgD,SAAW+F,EAC5B,CACA,IAAMC,EAAU,CAAEZ,MAAOU,EAAU9F,OAAQ+F,GAC3CR,EAASvI,QAAQoI,MAAQU,EACzBP,EAASvI,QAAQgD,OAAS+F,EACtBf,EAAYhI,QACdgI,EAAYhI,QAAQgJ,GAEfV,EAAWtI,SACdqI,EAAQW,EAGb,CACH,KAIJd,EAAkBlI,QAAQ0I,SAASzD,QAAQC,EAAS,CAAEuD,IAAKX,EAAKW,MAEpD,WACNP,EAAkBlI,SACpBkI,EAAkBlI,QAAQ0I,SAASvD,UAAUD,EAEjD,CACF,EACA,CAAC4C,EAAKW,IAAKR,IAEbH,EAAK/H,KAGP,OAAOkJ,EAAOA,QACZ,WAAA,MAAO,CACLlJ,IAAKyI,EACLJ,MAAOtC,EAAKsC,MACZpF,OAAQ8C,EAAK9C,OACd,EACD,CAACwF,EAAa1C,EAAKsC,MAAOtC,EAAK9C,QAEnC,CDhF6BkG,CAAkB,CAC3CnJ,IAAKkH,IACLc,SAAUpB,cAAY,WACpBS,EAAQvC,YACV,EAAG,CAACuC,MAJErH,IAmCR,MAAO,CAAEoJ,SArBT,SAAiBpE,GAAwC,IAArCqE,EAAIrE,EAAJqE,KAAMrJ,EAAGgF,EAAHhF,IAAKmC,EAAK6C,EAAL7C,MAAUmH,EAAI9E,EAAAQ,EAAAzE,GAC3C,MAAO,CACLgJ,GAAE,GAAKF,EACPrJ,IAAKN,EAAU,SAAC8D,GACTA,GAXQ,SAACyB,GAClB,IAAQzB,EAAqByB,EAArBzB,KAAalB,EAAQ2C,EAAR3C,IACrBkB,EAAKnB,QAAQa,MADgB+B,EAAf/B,MAEdM,EAAKnB,QAAQC,IAAMA,EACnB+E,EAAQtF,IAAIkD,EACd,CAOMuE,CAAU9E,EACRlB,CAAAA,KAAAA,EACA6F,KAAAA,GACGC,GAEP,EAAGtJ,GACHmC,MAAKuC,EAAA,CAAA,EACAvC,GAGT,EAMmBsH,YAJCP,EAAOA,QAAC,WAAM,OAAAxJ,EAAU+H,EAAcK,EAAU,EAAE,CACpEL,EACAK,IAGJ"}